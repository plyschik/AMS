@model AMS.MVC.ViewModels.GenreViewModels.GenreIndexViewModel

@{
    ViewData["Title"] = "Genres list";
    
    string nameOrder;
    var nameArrow = "";

    if ((string) ViewData["sort"] == "name")
    {
        nameOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        nameArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        nameOrder = "asc";
    }

}

<div class="d-flex justify-content-between align-items-center">
    <h2 class="mb-0">Genres list</h2>
    
    @if (User.IsInRole("Administrator"))
    {
        <a class="btn btn-success" asp-controller="Genres" asp-action="Create">Create genre</a>   
    }
</div>

<hr class="my-4" />

@if (!Model.Paginator.Elements.Any())
{
    <div class="alert alert-info" role="alert">
        Genres list is empty.
    </div>
}
else
{
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => Model.Paginator.Elements.First().Id)
                </th>
                <th class="align-middle">
                    <a asp-controller="Genres" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="name" asp-route-order="@nameOrder" class="text-decoration-none text-white">
                        @Html.DisplayNameFor(model => model.Paginator.Elements.First().Name) @nameArrow    
                    </a>
                </th>
                
                @if (User.IsInRole("Administrator"))
                {
                    <th class="align-middle">
                        Actions
                    </th>   
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var genre in Model.Paginator.Elements)
            {
                <tr>
                    <td class="align-middle">
                        <a asp-controller="Genres" asp-action="Show" asp-route-id="@genre.Id">
                            @Html.DisplayFor(genres => genre.Id)
                        </a>
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(genres => genre.Name)
                    </td>
                    
                    @if (User.IsInRole("Administrator"))
                    {
                        <td class="align-middle">
                            <a class="btn btn-primary" asp-controller="Genres" asp-action="Edit" asp-route-id="@genre.Id">Edit</a>
                            <a class="btn btn-danger" asp-controller="Genres" asp-action="ConfirmDelete" asp-route-id="@genre.Id">Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            @if (Model.Paginator.HasPreviousPage)
            {
                <a asp-controller="Genres" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage - 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Previous</a>
            }
        </div>
        <div>
            Page @Model.Paginator.CurrentPage from @Model.Paginator.TotalPages
        </div>
        <div>
            @if (Model.Paginator.HasNextPage)
            {
                <a asp-controller="Genres" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage + 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Next</a>
            }            
        </div>
    </div>
}

@model IEnumerable<AMS.MVC.Data.Models.Movie>

@{
    ViewData["Title"] = "Movies list";
}

<div class="d-flex justify-content-between align-items-center">
    <h2 class="mb-0">Movies list</h2>
    
    @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
    {
        <a class="btn btn-success" asp-controller="Movies" asp-action="Create">Create movie</a>
    }
</div>

<hr class="my-4" />

@if (!Model.Any())
{
    <div class="alert alert-info" role="alert">
        Movies list is empty.
    </div>
}
else
{
    @foreach (var movie in Model)
    {
        var genres = movie.MovieGenres.Select(mg => mg.Genre).ToList();
        var directors = movie.MovieDirectors.Select(md => md.Person).ToList();
        var writers = movie.MovieWriters.Select(mw => mw.Person).ToList();

        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title mb-3 text">
                    @Html.DisplayFor(movies => movie.Title)
                </h5>
                
                @if (genres.Any())
                {
                    <h6 class="card-subtitle mb-3">
                        <i>Genres:</i> @string.Join(", ", genres.Select(genre => genre.Name))
                    </h6>    
                }
                
                @if (directors.Any())
                {
                    <h6 class="card-subtitle mb-3">
                        <i>Directors:</i> @string.Join(", ", directors.Select(person => person.FullName))
                    </h6>    
                }
                
                @if (writers.Any())
                {
                    <h6 class="card-subtitle mb-3">
                        <i>Writers:</i> @string.Join(", ", writers.Select(person => person.FullName))
                    </h6>
                }
                
                <h6 class="card-subtitle mb-2">
                    <i>@Html.DisplayNameFor(model => model.ReleaseDate):</i> @Html.DisplayFor(movies => movie.ReleaseDate)
                </h6>
                <p class="card-text">
                    <i>@Html.DisplayNameFor(model => model.Description):</i> @Html.DisplayFor(movies => movie.Description)
                </p>
                <a class="card-link" asp-controller="Movies" asp-action="Show" asp-route-id="@movie.Id">Details</a>
                
                @if ((await AuthorizationService.AuthorizeAsync(User, movie, MovieOperations.Edit)).Succeeded)
                {
                    <a class="card-link" asp-controller="Movies" asp-action="Edit" asp-route-id="@movie.Id">Edit</a>
                }
                
                @if (User.IsInRole("Administrator"))
                {
                    <a class="card-link" asp-controller="Movies" asp-action="ConfirmDelete" asp-route-id="@movie.Id">Delete</a>   
                }
            </div>
        </div>   
    }
}

@model AMS.MVC.ViewModels.MovieViewModels.MovieIndexViewModel

@{
    ViewData["Title"] = "Movies list";
    
    var titleClass = "";
    string titleOrder;
    var titleArrow = "";
    
    if ((string) ViewData["sort"] == "title")
    {
        titleClass = "font-weight-bold";
        titleOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        titleArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        titleOrder = "asc";
    }
    
    var releaseDateClass = "";
    string releaseDateOrder;
    var releaseDateArrow = "";
    
    if ((string) ViewData["sort"] == "release_date")
    {
        releaseDateClass = "font-weight-bold";
        releaseDateOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        releaseDateArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        releaseDateOrder = "asc";
    }
}

<div class="d-flex justify-content-between align-items-center">
    <h2 class="mb-0">Movies list</h2>
    
    @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
    {
        <a class="btn btn-success" asp-controller="Movies" asp-action="Create">Create movie</a>
    }
</div>

<hr class="my-4" />

<div class="d-flex align-items-center mb-4">
    <span class="mr-2">Sort by:</span>
    <ul class="list-inline mb-0">
        <li class="list-inline-item">
            <a asp-controller="Movies" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="title" asp-route-order="@titleOrder" class="@titleClass">Title @titleArrow</a>
        </li>
        <li class="list-inline-item">
            <a asp-controller="Movies" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="release_date" asp-route-order="@releaseDateOrder" class="@releaseDateClass">Release date @releaseDateArrow</a>
        </li>
    </ul>
</div>

@if (!Model.Paginator.Elements.Any())
{
    <div class="alert alert-info" role="alert">
        Movies list is empty.
    </div>
}
else
{
    @foreach (var movie in Model.Paginator.Elements)
    {
        var genres = movie.MovieGenres.Select(mg => mg.Genre).ToList();

        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title mb-3 text">
                    @Html.DisplayFor(movies => movie.Title) (@Html.DisplayFor(movies => movie.ReleaseDate.Year))
                </h5>
                
                @if (genres.Any())
                {
                    <h6 class="card-subtitle mb-3">
                        @foreach (var genre in genres)
                        {
                            <a asp-controller="Genres" asp-action="Show" asp-route-genreId="@genre.Id" class="badge badge-primary">@genre.Name</a>
                        }
                    </h6>
                }
                
                @if (!string.IsNullOrEmpty(movie.Description))
                {
                    <p class="card-text">
                        <i>@Html.DisplayFor(movies => movie.Description)</i>
                    </p>
                }

                <a class="card-link" asp-controller="Movies" asp-action="Show" asp-route-id="@movie.Id">Details</a>
                
                @if ((await AuthorizationService.AuthorizeAsync(User, movie, MovieOperations.Edit)).Succeeded)
                {
                    <a class="card-link" asp-controller="Movies" asp-action="Edit" asp-route-id="@movie.Id">Edit</a>
                }
                
                @if (User.IsInRole("Administrator"))
                {
                    <a class="card-link" asp-controller="Movies" asp-action="ConfirmDelete" asp-route-id="@movie.Id">Delete</a>   
                }
            </div>
        </div>   
    }
    
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            @if (Model.Paginator.HasPreviousPage)
            {
                <a asp-controller="Movies" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage - 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Previous</a>
            }
        </div>
        <div>
            Page @Model.Paginator.CurrentPage from @Model.Paginator.TotalPages
        </div>
        <div>
            @if (Model.Paginator.HasNextPage)
            {
                <a asp-controller="Movies" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage + 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Next</a>
            }            
        </div>
    </div>
}

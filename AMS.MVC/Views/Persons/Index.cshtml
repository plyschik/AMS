@model AMS.MVC.ViewModels.PersonViewModels.PersonIndexViewModel

@{
    ViewData["Title"] = "Persons list";
    
    string firstNameOrder;
    var firstNameArrow = "";
    
    if ((string) ViewData["sort"] == "first_name")
    {
        firstNameOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        firstNameArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        firstNameOrder = "asc";
    }
    
    string lastNameOrder;
    var lastNameArrow = "";
    
    if ((string) ViewData["sort"] == "last_name")
    {
        lastNameOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        lastNameArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        lastNameOrder = "asc";
    }
    
    string dateOfBirthOrder;
    var dateOfBirthArrow = "";
    
    if ((string) ViewData["sort"] == "date_of_birth")
    {
        dateOfBirthOrder = (string) ViewData["order"] == "asc" ? "desc" : "asc";
        dateOfBirthArrow = (string) ViewData["order"] == "asc" ? "▲" : "▼";
    }
    else
    {
        dateOfBirthOrder = "asc";
    }
}

<div class="d-flex justify-content-between align-items-center">
    <h2 class="mb-0">Persons list</h2>
    
    @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
    {
        <a class="btn btn-success" asp-controller="Persons" asp-action="Create">Create movie</a>
    }
</div>

<hr class="my-4" />

@if (!Model.Paginator.Elements.Any())
{
    <div class="alert alert-info" role="alert">
        Persons list is empty.
    </div>
}
else
{
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th class="align-middle">
                    @Html.DisplayNameFor(model => model.Paginator.Elements.First().Id)
                </th>
                <th class="align-middle">
                    <a asp-controller="Persons" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="first_name" asp-route-order="@firstNameOrder" class="text-decoration-none text-white">
                        @Html.DisplayNameFor(model => model.Paginator.Elements.First().FirstName) @firstNameArrow
                    </a>
                </th>
                <th class="align-middle">
                    <a asp-controller="Persons" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="last_name" asp-route-order="@lastNameOrder" class="text-decoration-none text-white">
                        @Html.DisplayNameFor(model => model.Paginator.Elements.First().LastName) @lastNameArrow
                    </a>
                </th>
                <th class="align-middle">
                    <a asp-controller="Persons" asp-action="Index" asp-route-page="@ViewData["page"]" asp-route-sort="date_of_birth" asp-route-order="@dateOfBirthOrder" class="text-decoration-none text-white">
                        @Html.DisplayNameFor(model => model.Paginator.Elements.First().DateOfBirth) @dateOfBirthArrow
                    </a>
                </th>
                    
                @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
                {
                    <th></th>   
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var person in Model.Paginator.Elements)
            {
                <tr>
                    <td class="align-middle">
                        <a asp-controller="Persons" asp-action="Show" asp-route-id="@person.Id">
                            @Html.DisplayFor(model => person.Id)
                        </a>
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(model => person.FirstName)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(model => person.LastName)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(model => person.DateOfBirth)
                    </td>
                        
                    @if (User.IsInRole("Manager") || User.IsInRole("Administrator"))
                    {
                        <td class="align-middle">
                            <a class="btn btn-primary" asp-controller="Persons" asp-action="Edit" asp-route-id="@person.Id">Edit</a>
                            <a class="btn btn-danger" asp-controller="Persons" asp-action="ConfirmDelete" asp-route-id="@person.Id">Delete</a>
                        </td>   
                    }
                </tr>
            }
        </tbody>
    </table>
    
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            @if (Model.Paginator.HasPreviousPage)
            {
                <a asp-controller="Persons" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage - 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Previous</a>
            }
        </div>
        <div>
            Page @Model.Paginator.CurrentPage from @Model.Paginator.TotalPages
        </div>
        <div>
            @if (Model.Paginator.HasNextPage)
            {
                <a asp-controller="Persons" asp-action="Index" asp-route-page="@(Model.Paginator.CurrentPage + 1)" asp-route-sort="@ViewData["sort"]" asp-route-order="@ViewData["order"]" class="btn btn-primary">Next</a>
            }            
        </div>
    </div>
}
